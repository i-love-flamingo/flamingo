// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	url "net/url"
)

// RedirectURLMaker is an autogenerated mock type for the RedirectURLMaker type
type RedirectURLMaker struct {
	mock.Mock
}

type RedirectURLMaker_Expecter struct {
	mock *mock.Mock
}

func (_m *RedirectURLMaker) EXPECT() *RedirectURLMaker_Expecter {
	return &RedirectURLMaker_Expecter{mock: &_m.Mock}
}

// URL provides a mock function with given fields: _a0, _a1
func (_m *RedirectURLMaker) URL(_a0 context.Context, _a1 string) (*url.URL, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for URL")
	}

	var r0 *url.URL
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*url.URL, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *url.URL); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*url.URL)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RedirectURLMaker_URL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'URL'
type RedirectURLMaker_URL_Call struct {
	*mock.Call
}

// URL is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 string
func (_e *RedirectURLMaker_Expecter) URL(_a0 interface{}, _a1 interface{}) *RedirectURLMaker_URL_Call {
	return &RedirectURLMaker_URL_Call{Call: _e.mock.On("URL", _a0, _a1)}
}

func (_c *RedirectURLMaker_URL_Call) Run(run func(_a0 context.Context, _a1 string)) *RedirectURLMaker_URL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *RedirectURLMaker_URL_Call) Return(_a0 *url.URL, _a1 error) *RedirectURLMaker_URL_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *RedirectURLMaker_URL_Call) RunAndReturn(run func(context.Context, string) (*url.URL, error)) *RedirectURLMaker_URL_Call {
	_c.Call.Return(run)
	return _c
}

// NewRedirectURLMaker creates a new instance of RedirectURLMaker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRedirectURLMaker(t interface {
	mock.TestingT
	Cleanup(func())
}) *RedirectURLMaker {
	mock := &RedirectURLMaker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
