// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	testing "testing"

	url "net/url"
)

// RedirectURLMaker is an autogenerated mock type for the RedirectURLMaker type
type RedirectURLMaker struct {
	mock.Mock
}

// URL provides a mock function with given fields: _a0, _a1
func (_m *RedirectURLMaker) URL(_a0 context.Context, _a1 string) (*url.URL, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *url.URL
	if rf, ok := ret.Get(0).(func(context.Context, string) *url.URL); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*url.URL)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRedirectURLMaker creates a new instance of RedirectURLMaker. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewRedirectURLMaker(t testing.TB) *RedirectURLMaker {
	mock := &RedirectURLMaker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
